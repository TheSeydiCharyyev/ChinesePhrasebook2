# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–ª—è –î–Ω—è 21
# –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ ChinesePhrasebook2

echo "üîç –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ - –î–µ–Ω—å 21"
echo "========================================"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤..."

required_files=(
    "src/data/phrases.ts"
    "src/data/categories.ts" 
    "src/navigation/AppNavigator.tsx"
    "src/contexts/LanguageContext.tsx"
    "src/contexts/OfflineDataContext.tsx"
    "app.json"
    "package.json"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $file"
    fi
done

echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

required_deps=(
    "@react-navigation/native"
    "@react-navigation/bottom-tabs"
    "@react-navigation/stack"
    "expo-av"
    "@react-native-async-storage/async-storage"
    "@expo/vector-icons"
)

for dep in "${required_deps[@]}"; do
    if npm list "$dep" >/dev/null 2>&1; then
        echo "‚úÖ $dep"
    else
        echo "‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û: $dep"
    fi
done

echo ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."

required_dirs=(
    "src/components"
    "src/screens"
    "src/hooks"
    "src/utils"
    "src/constants"
    "src/data"
    "src/types"
    "assets"
)

for dir in "${required_dirs[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir"
    else
        echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $dir"
    fi
done

echo ""

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..."

if command -v npx >/dev/null 2>&1; then
    echo "–ó–∞–ø—É—Å–∫ TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    npx tsc --noEmit --skipLibCheck 2>&1 | head -10
    
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
        echo "‚úÖ TypeScript –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"
    else
        echo "‚ö†Ô∏è –ï—Å—Ç—å TypeScript –æ—à–∏–±–∫–∏ (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 10)"
    fi
else
    echo "‚ö†Ô∏è npx –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É TypeScript"
fi

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ phrases.ts
if [ -f "src/data/phrases.ts" ]; then
    phrase_count=$(grep -c "id:" src/data/phrases.ts 2>/dev/null || echo "0")
    echo "üìä –§—Ä–∞–∑ –≤ –±–∞–∑–µ: $phrase_count"
    
    if [ "$phrase_count" -ge "150" ]; then
        echo "‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ—Ä–∞–∑ –¥–ª—è —Ä–µ–ª–∏–∑–∞"
    else
        echo "‚ö†Ô∏è –ú–∞–ª–æ —Ñ—Ä–∞–∑ (–Ω—É–∂–Ω–æ 157, –µ—Å—Ç—å $phrase_count)"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ categories.ts
if [ -f "src/data/categories.ts" ]; then
    category_count=$(grep -c "id:" src/data/categories.ts 2>/dev/null || echo "0")
    echo "üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ: $category_count"
    
    if [ "$category_count" -ge "13" ]; then
        echo "‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"
    else
        echo "‚ö†Ô∏è –ú–∞–ª–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω—É–∂–Ω–æ 13+, –µ—Å—Ç—å $category_count)"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ app.json
if [ -f "app.json" ]; then
    if grep -q "version" app.json; then
        version=$(grep "version" app.json | cut -d'"' -f4)
        echo "üì± –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $version"
    fi
    
    if grep -q "icon" app.json; then
        echo "‚úÖ –ò–∫–æ–Ω–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ app.json"
    else
        echo "‚ö†Ô∏è –ò–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ app.json"
    fi
fi

echo ""

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ assets
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."

if [ -d "assets" ]; then
    icon_files=($(find assets -name "*icon*.png" 2>/dev/null))
    if [ ${#icon_files[@]} -gt 0 ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∏–∫–æ–Ω–æ–∫:"
        for icon in "${icon_files[@]}"; do
            echo "   üìé $icon"
        done
    else
        echo "‚ö†Ô∏è –§–∞–π–ª—ã –∏–∫–æ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ assets/"
    fi
else
    echo "‚ùå –ü–∞–ø–∫–∞ assets –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

echo ""

# 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
echo "7Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."

# –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–±–ª–µ–º
problems=0

# –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
if [ ! -f "src/data/phrases.ts" ]; then problems=$((problems + 3)); fi
if [ ! -f "src/navigation/AppNavigator.tsx" ]; then problems=$((problems + 3)); fi
if [ ! -f "app.json" ]; then problems=$((problems + 2)); fi

# –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
if [ ! -d "assets" ]; then problems=$((problems + 1)); fi

# –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
if [ $problems -eq 0 ]; then
    echo "üéâ –û–¢–õ–ò–ß–ù–û! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–ª–∏–∑—É (0 –ø—Ä–æ–±–ª–µ–º)"
    echo "üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 99-100%"
elif [ $problems -le 2 ]; then
    echo "‚úÖ –•–û–†–û–®–û! –ú–∏–Ω–æ—Ä–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã ($problems)"  
    echo "üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 90-98%"
elif [ $problems -le 5 ]; then
    echo "‚ö†Ô∏è –ù–£–ñ–ù–ê –†–ê–ë–û–¢–ê! –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã ($problems)"
    echo "üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 70-89%"
else
    echo "‚ùå –ö–†–ò–¢–ò–ß–ù–û! –ú–Ω–æ–≥–æ –ø—Ä–æ–±–ª–µ–º ($problems)"
    echo "üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: <70%"
fi

echo ""
echo "üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:"
echo "npm install                    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "npx expo start                 # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
echo "npx tsc --noEmit              # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å TypeScript"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"
echo "3. –°–æ–∑–¥–∞—Ç—å –∏–∫–æ–Ω–∫–∏ —Å –ø–æ–º–æ—â—å—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"
echo "4. –ü–µ—Ä–µ–π—Ç–∏ –∫ –ü–†–ò–û–†–ò–¢–ï–¢–£ 2 –∑–∞–¥–∞—á"