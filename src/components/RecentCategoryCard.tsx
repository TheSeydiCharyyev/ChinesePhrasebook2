// src/components/RecentCategoryCard.tsx - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –µ–¥–∏–Ω—ã–º–∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏

import React, { useCallback } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Dimensions,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';

// –ò–º–ø–æ—Ä—Ç—ã
import { Phrase } from '../types';
import { Colors } from '../constants/Colors';
import { useAnimations } from '../hooks/useAnimations';
import { useAppLanguage } from '../contexts/LanguageContext';

const { width } = Dimensions.get('window');
const CARD_WIDTH = (width - 48) / 2; // –¢–∞–∫–æ–π –∂–µ —Ä–∞–∑–º–µ—Ä –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const CARD_HEIGHT = 120; // –¢–∞–∫–∞—è –∂–µ –≤—ã—Å–æ—Ç–∞ –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const CARD_MARGIN = 8;

interface RecentCategoryCardProps {
  recentPhrases: Phrase[];
  stats: any;
  onPress: () => void;
  onStatsPress: () => void;
}

const RecentCategoryCard = React.memo<RecentCategoryCardProps>(({ 
  recentPhrases, 
  stats, 
  onPress, 
  onStatsPress 
}) => {
  const { hapticFeedback } = useAnimations();
  const { getTexts, config } = useAppLanguage();
  const texts = getTexts();

  const handlePress = useCallback(() => {
    hapticFeedback('medium');
    onPress();
  }, [onPress, hapticFeedback]);

  const handleLongPress = useCallback(() => {
    hapticFeedback('heavy');
    onStatsPress();
  }, [onStatsPress, hapticFeedback]);

  return (
    <View style={styles.cardContainer}>
      {/* ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–∞–∫–∏–µ –∂–µ —Å—Ç–∏–ª–∏ –∫–∞–∫ —É –æ–±—ã—á–Ω—ã—Ö CategoryCard */}
      <TouchableOpacity
        style={styles.card}
        onPress={handlePress}
        onLongPress={handleLongPress}
        activeOpacity={0.7}
      >
        {/* –ò–∫–æ–Ω–∫–∞ - —Ç–∞–∫–∞—è –∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–∫ –≤ CategoryCard */}
        <View style={styles.iconContainer}>
          <Text style={styles.categoryIcon}>üìö</Text>
        </View>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç - —Ç–∞–∫–∞—è –∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–∫ –≤ CategoryCard */}
        <View style={styles.contentContainer}>
          {/* ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
          <Text style={styles.categoryTitle} numberOfLines={2}>
            {config.mode === 'tk' ? 'So≈àky √∂wrenilen' :
             config.mode === 'zh' ? 'ÊúÄËøëÂ≠¶‰π†ÁöÑ' :
             '–ù–µ–¥–∞–≤–Ω–∏–µ —Ñ—Ä–∞–∑—ã'}
          </Text>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <View style={styles.statsContainer}>
            <Text style={styles.statsText}>
              {recentPhrases.length} {config.mode === 'tk' ? 's√∂zlem' : 
                                     config.mode === 'zh' ? 'Áü≠ËØ≠' : '—Ñ—Ä–∞–∑'}
            </Text>
          </View>

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä - —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ –≤ CategoryCard */}
          <View style={styles.indicatorContainer}>
            <Ionicons 
              name="chevron-forward" 
              size={16} 
              color={Colors.primary} 
            />
          </View>
        </View>
      </TouchableOpacity>
    </View>
  );
});

RecentCategoryCard.displayName = 'RecentCategoryCard';

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ —Å—Ç–∏–ª–∏ –∫–∞–∫ —É CategoryCard
const styles = StyleSheet.create({
  cardContainer: {
    width: CARD_WIDTH,
    height: CARD_HEIGHT, 
    marginBottom: CARD_MARGIN,
    // –¢–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ —Ç–µ–Ω—å –∫–∞–∫ —É CategoryCard
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  
  card: {
    flex: 1,
    borderRadius: 16,
    borderWidth: 1,
    borderColor: Colors.primary + '20', // –õ–µ–≥–∫–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–≤–µ—Ç–µ
    padding: 16,
    justifyContent: 'space-between',
    backgroundColor: Colors.primary + '05', // –û—á–µ–Ω—å –ª–µ–≥–∫–∏–π –æ—Ç—Ç–µ–Ω–æ–∫
  },
  
  iconContainer: {
    alignSelf: 'flex-start',
    marginBottom: 8,
  },
  
  categoryIcon: {
    fontSize: 32,
    lineHeight: 36,
    color: Colors.primary, // –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏ –∫–∞–∫ –∞–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç
  },
  
  contentContainer: {
    flex: 1,
    justifyContent: 'space-between',
    alignItems: 'flex-start',
  },
  
  categoryTitle: {
    fontSize: 16,
    fontWeight: '600',
    lineHeight: 20,
    color: '#1F2937',
    letterSpacing: -0.3,
  },
  
  statsContainer: {
    marginVertical: 4,
  },
  
  statsText: {
    fontSize: 14,
    color: Colors.textLight,
  },
  
  indicatorContainer: {
    alignSelf: 'flex-end',
    marginTop: 4,
  },
});

export default RecentCategoryCard;